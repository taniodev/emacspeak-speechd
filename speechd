#!/usr/bin/env tclsh

package require Tclx

set servers_dir [file dirname $argv0]
source $servers_dir/tts-lib.tcl
load $servers_dir/linux-speechd/tclspeechd.so
tts_initialize
beep_initialize

# Sets the output module that should be used for synthesis
# set_output_module rhvoice

# Speech Dispatcher volume (-100 to +100)
set_volume 80


proc d {} {
    global tts

    loop index 0 [queue_length] {
        set event [queue_remove]
        set type [lindex $event 0]
        set content [lindex $event 1]

        switch $type {
            s {
                say $content
            }
            a {
                exec $tts(play) $content > /dev/null &
            }
            b {
                if {$tts(beep)} {
                    lvarpop event
                    eval beep $event
                }
            }
        }
    }

    return ""
}


proc l {character} {
    say_character $character
}


proc s {} {
    stop
    queue_clear
}


proc set_lang {lang {say_it ""}} {
    set_language $lang
}


proc t {{pitch 440} {duration 50}} {
    b $pitch $duration
}


proc tts_pause {} {
    pause
}


proc tts_resume {} {
    resume
}


proc tts_say {text} {
    # Remove dectalk control codes
    regsub -all {\[\*\]} $text { } text

    say $text
}


proc tts_set_punctuations {punct} {
    set_punctuation $punct
}


proc tts_set_speech_rate {rate} {
    set_rate $rate
}


commandloop
